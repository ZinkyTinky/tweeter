// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tweeter_api.Migrations;

#nullable disable

namespace final_project.Migrations
{
    [DbContext(typeof(TweeterDbContext))]
    [Migration("20241212114245_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.10");

            modelBuilder.Entity("tweeter_api.Models.Tweet", b =>
                {
                    b.Property<int>("TweetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TweetBody")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TweeterId")
                        .IsRequired()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("createdAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("editedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("TweetId");

                    b.HasIndex("TweeterId");

                    b.ToTable("Tweet");

                    b.HasData(
                        new
                        {
                            TweetId = 1,
                            Title = "Cappa lover",
                            TweetBody = "I'm just a chill guy who loves cappuccinos",
                            TweeterId = 1
                        },
                        new
                        {
                            TweetId = 2,
                            Title = "HC lover",
                            TweetBody = "I'm just a chill guy who loves Hot chocolates",
                            TweeterId = 1
                        });
                });

            modelBuilder.Entity("tweeter_api.Models.User", b =>
                {
                    b.Property<int>("TweeterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("following")
                        .HasColumnType("TEXT");

                    b.HasKey("TweeterId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            TweeterId = 1,
                            Bio = "Honestly just a chill guy",
                            Email = "zian@tsale.co.za",
                            FirstName = "Zian",
                            LastName = "Jacobsen",
                            Password = "Password1!",
                            ProfilePicture = "https://i.imgur.com/1.jpg",
                            Username = "zianjacobsen"
                        });
                });

            modelBuilder.Entity("tweeter_api.Models.Tweet", b =>
                {
                    b.HasOne("tweeter_api.Models.User", "Tweeter")
                        .WithMany("Tweets")
                        .HasForeignKey("TweeterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tweeter");
                });

            modelBuilder.Entity("tweeter_api.Models.User", b =>
                {
                    b.Navigation("Tweets");
                });
#pragma warning restore 612, 618
        }
    }
}
